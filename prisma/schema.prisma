generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @unique @default(uuid())
  stripe_id        String?        @unique
  nome             String
  sobrenome        String
  email            String         @unique
  telefone         String?
  ativo            Boolean
  plano            Plan           @default(GRATIS)
  data_atualizacao DateTime       @default(now()) @db.Timestamp(6)
  data_criacao     DateTime       @default(now()) @db.Timestamp(6)
  imagem           String?
  senha            String
  anuncios         Adverts[]
  inscricoes       Subscription[]

  @@map("users")
}

model Subscription {
  id                           String   @unique @default(uuid())
  status                       String
  inscricao_id                 String?  @unique
  ciclo                        String
  usuario_id                   String
  stripe_produto_id            String?
  data_atualizacao             DateTime @default(now()) @db.Timestamp(6)
  data_criacao                 DateTime @default(now()) @db.Timestamp(6)
  cancelar_ao_final_do_periodo Boolean
  periodo_inicial              DateTime
  periodo_final                DateTime
  usuario                      User     @relation(fields: [usuario_id], references: [id])

  @@map("subscriptions")
}

model Adverts {
  id                  String     @id @default(uuid())
  tipo                String
  ano_modelo          Int
  cor                 String
  cidade              String
  cidade_formatada    String
  estado              String
  estado_formatado    String
  preco               Int
  portas              String
  quilometragem       Int
  descricao           String?
  descricao_formatada String?
  placa               String
  cambio              String
  data_cricao         DateTime   @default(now()) @db.Timestamp(6)
  data_atualizacao    DateTime?  @default(now()) @db.Timestamp(6)
  status              Status     @default(PENDENTE)
  slug                String     @unique
  destaque            Boolean?
  usuario_id          String
  usuario             User       @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  imagens             Photos[]
  opcionais           Optional[] @relation("AdvertsToOptional")
  modelo_id           Int
  modelo              Models     @relation(fields: [modelo_id], references: [id], onDelete: Cascade)
  marca               Brands?    @relation(fields: [marca_id], references: [id], onDelete: Cascade)
  marca_id            Int?

  @@map("adverts")
}

model Brands {
  id        Int       @id
  nome      String
  categoria Category
  slug      String
  modelos   Models[]
  anuncios  Adverts[]

  @@map("brands")
}

model Models {
  id        Int       @id @default(autoincrement())
  nome      String    @unique
  slug      String
  categoria Category
  Adverts   Adverts[]
  Brands    Brands?   @relation(fields: [brandsId], references: [id])
  brandsId  Int?

  @@map("models")
}

model Optional {
  id       String    @id @unique @default(uuid())
  nome     String    @unique
  anuncios Adverts[] @relation("AdvertsToOptional")

  @@map("optional")
}

model Photos {
  id         String  @id @default(uuid())
  url        String
  anuncio_id String
  anuncio    Adverts @relation(fields: [anuncio_id], references: [id], onDelete: Cascade)

  @@map("photos")
}

enum Status {
  ATIVO
  INATIVO
  PENDENTE
}

enum Plan {
  GRATIS
  BASICO
  PRO
}

enum Category {
  CARROS
  CAMINHOES
  MOTOS
}
